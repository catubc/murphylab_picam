Files:
HX711.h		Header file 
HX711.cpp	c++ code that interfaces with HX711 load cell amplifier using wiringPi library
pyHX711.cpp	c++ code that provides Python interface
setup.py	Python code that compiles c++ code to library, need to have distUtils installed to run it
Scale.py	Python code that provides a Python object interface to HX711
HX711test.cpp	c++ code to make a test application 

DEPENCIES (Some are optional)
wiringPi install:  see here http://wiringpi.com/download-and-install/


to install to local folder:
python3 setup.py build_ext --inplace

This makes a shared library, HX711.cpython-34m.so, which can be imported into python

to install in library folder where it is always accessible (/usr/local/lib/python3.4/dist-packages):
sudo python3 setup.py install

In Python, use the HX711 like so:
import HX711
make a scale object (data Pin, clock Pin, scaling (grams/ADC unit), Init GPIO only once per python session)
scal1 = HX711.new (23,24,7.14e-05, True)
Tare scale, averaging 10 times
HX711.tare (scal1, 10)
Weigh scale avergaing 10 times
HX711.weigh (scal1, 10)

The c++ code can be used separately, and can be compiled with a test application as follows:
g++ -o HX711test -lwiringPi HX711test.cpp HX711.cpp

**Note might need to add -lpthread flag if not already in make file

I was using path exports on the command line for building, but setup handles all this now
export CPATH="/usr/local/include/"
export LD_LIBRARY_PATH=/usr/local/lib/python3.4/dist-packages
